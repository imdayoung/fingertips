<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="fingertips.backend.challenge.mapper.ChallengeMapper">
    <select id="getChallengeList" resultType="ChallengeDTO" parameterType="Integer">
        SELECT ch.challenge_idx, ca.category_name, ch.member_idx, ch.challenge_name, ch.challenge_type,
               ch.challenge_limit, ch.detailed_category, ch.challenge_start_date, ch.challenge_end_date
        FROM challenge ch
        JOIN category ca ON ca.category_idx = ch.category_idx
        WHERE ch.member_idx = #{memberIdx} AND ch.is_public = 1 AND ch.is_delete = 0;
    </select>


    <insert id="insertChallenge"  parameterType="ChallengeDTO">
        INSERT INTO challenge (member_idx, challenge_name, challenge_type, challenge_limit, category_idx,
                               detailed_category, challenge_status, challenge_start_date, challenge_end_date, is_public)
        VALUES (#{memberIdx}, #{challengeName}, #{challengeType}, #{challengeLimit},#{categoryIdx},
                #{detailedCategory}, #{challengeStatus}, #{challengeStartDate}, #{challengeEndDate}, #{isPublic})
    </insert>

    <delete id="deleteChallenge" parameterType="Integer">
        UPDATE challenge
        SET is_delete = 1
        WHERE challenge_idx = #{challengeIdx}
    </delete>

    <select id="getCardHistoryContentByCategory" parameterType="CardTransactionFilterDTO" resultType="CardTransactionDTO2">
        SELECT ct.card_transaction_description
        FROM card_transaction ct
            JOIN card c ON ct.card_idx = c.card_idx
        WHERE c.member_idx = #{memberIdx} AND ct.category_idx = #{categoryIdx} AND c.connected_status = 1
    </select>

    <select id="getChallengeStatus" resultType="ProgressDTO">
        SELECT c.id, c.challenge_limit, COALESCE(COUNT(ch.id), 0) AS cardHistoryCount
--         SELECT c.id, c.challenge_limit,  CASE
--                                              WHEN c.challenge_type = 0 THEN COALESCE(count(ch.id), 0)
--                                              WHEN c.challenge_type = 1 THEN COALESCE(sum(ch.amount), 0)
--             END AS cardHistoryCount
        FROM challenge c
            LEFT JOIN card_history ch
                ON ch.consumption_date BETWEEN c.start_date AND c.end_date
                    AND ch.content LIKE CONCAT('%', c.detailed_category, '%')
                    AND ch.category = c.category
        WHERE member_id = #{memberId} AND is_active = 1
        GROUP BY c.id;
    </select>

    <select id="getAllChallengeList" parameterType="String" resultType="ChallengeDTO">
        SELECT ch.challenge_idx, ch.challengeName, ch.challengeType, ch.challengeLimit, ch.categoryIdx, ch.detailedCategory,
               ch.challengeStatus, ca.categoryName
        FROM challenge ch
            JOIN category ca ON ca.category_idx = ch.category_idx
        WHERE is_public = 1 AND is_delete = 0
    </select>
</mapper>
