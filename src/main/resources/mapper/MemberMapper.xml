<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="fingertips.backend.member.mapper.MemberMapper">
    <select id="getMemberByMemberId" parameterType="String" resultType="MemberDTO">
        SELECT *
        FROM member
        WHERE member_id = #{memberId}
    </select>

    <insert id="insertMember" parameterType="MemberDTO">
        INSERT INTO member (member_id, password, member_name, birthday, gender, email)
        VALUES (#{memberId}, #{password}, #{memberName}, #{birthday}, #{gender}, #{email})
    </insert>

    <update id="updateLockStatus" parameterType="MemberDTO">
        UPDATE member
        SET is_login_locked = #{isLoginLocked}, login_lock_time = #{loginLockTime}
        WHERE member_id = #{memberId}
    </update>

    <update id="setRefreshToken" parameterType="MemberDTO">
        UPDATE member
        SET refresh_token = #{refreshToken}
        WHERE member_idx = #{memberIdx}
    </update>

    <select id="findByNameAndEmail" parameterType="MemberIdFindDTO" resultType="String">
        SELECT member_id
        FROM member
        WHERE email = #{email}
          AND member_name = #{memberName}
    </select>

    <select id="existsMemberId" parameterType="String" resultType="Integer">
        SELECT COUNT(*)
        FROM member
        WHERE member_id = #{memberId}
    </select>

    <!-- 마이페이지를 위한 정보 받아오기 -->
    <select id="getProfile" parameterType="String" resultType="ProfileDTO">
        SELECT
            member_id, member_name, birthday, email, image_url
        FROM member
        WHERE member_id = #{memberId}
    </select>

    <!-- 마이페이지를 위한 업데이트 위한 정보 받아오기(선택적 업데이트) -->
    <update id="updateProfile" parameterType="UpdateProfileDTO">
        UPDATE member
        <set>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="newPassword != null and newPassword != ''">
                newPassword = #{newPassword},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="imageUrl != null and imageUrl != ''">
                image_url = #{imageUrl}
            </if>
        </set>
        WHERE member_id = #{memberId}
    </update>

    <select id="getPassword" parameterType="String" resultType="String">
        SELECT password
        FROM member
        WHERE member_id = #{memberId}
    </select>

    <update id="clearRefreshToken">
        UPDATE member
        SET refresh_token = NULL
        WHERE member_id = #{memberId}
    </update>

    <update id="withdrawMember" parameterType="String">
        UPDATE member
        SET is_active = 0, withdraw_date = NOW()
        WHERE member_id = #{memberId}
    </update>

    <update id="updatePasswordByEmail" parameterType="PasswordFindDTO">
        UPDATE member
        SET password = #{newPassword}
        WHERE email = #{email}
    </update>

    <select id="checkEmailDuplicate" resultType="int">
        SELECT COUNT(*)
        FROM member
        WHERE email = #{email}
    </select>

    <select id="existsMemberName" parameterType="String" resultType="Integer">
        SELECT COUNT(*)
        FROM member
        WHERE member_name = #{memberName}
    </select>

    <insert id="insertAdmin" parameterType="MemberDTO">
        INSERT INTO member (member_id, password, role)
        VALUES (#{memberId}, #{password}, #{role})
    </insert>

</mapper>
